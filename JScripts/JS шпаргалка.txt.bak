Типы данных JS:
	bool - логическое значение
	number - числа (с плавающей точкой)
	NAN  - сигнальный тип для ошибок вычислений
	string - любой текстовый массив
	symbol - одиночный символ
	object - любой объект любого класса
	NAO - сигнальный тип для ошибок в классах
Вывод соообщений
	node - console.log("строка текстов")
	в браузере - alert("строка текстов")
Создание переменных:
Инструкция_создания имя{стартовое значение};
Инструкция создания:
	var - устаревший сиснтаксис который делает глобальную переменную которая не зависит от областей видимости и доступна для использования всему пользовательскому коду
	let - более привычные в использовании переменнные. имеет локальную область видимости и время жизни
	const - создание константной пременной. тип данных, стартовое значение определяются при создании и не могут быть изменены за время жизни объекта.
	
let value = 9;
value = "строчка";

Операторы JS:
	Математические операторы:
		+ 
		- 
		* 
		/ 
		% 
		**
	
	Присваивание:
		= - бинарный оператор, возвращает значение
		let a = 1;
		let b = 2;
		let c = 3 - (a = b+a);
		в первой переменной -3
		во второй 0
		+=, -=, ... - все операторы математики имеют сокращенную форму
	
	
	Присваивающие математические операторы:
		инкримент ++
		декримент --
		Имеют префиксную и посфиксную формы:
		префиксная пишется до операнда -  ++а
		посфиксная после -  а++
		
		let a = 3;
		let c = a++; // c=3, a=4
		let c = ++a; // c=4, a=4
		let d = c++ + --a; // d=4+3, c=5, a=3
		
	Сравнение:
		Основной перечень как в пайтоне
		== - не строгое сравнение, оператор пытается привести все к общему типу во что ьы то не стало
		=== - строгое сравнение, оператор никогда не приводит 	типы. при несоответствии типов возвращает false
		
	Логические операторы:
		и  -  && // аналог and
		или - || // аналог or
		не  - !  // аналог not
		тип данных для операндов не кретичен - они всегда преобразуются к логическим значениям
		